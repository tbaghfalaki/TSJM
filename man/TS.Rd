% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TS.R
\name{TS}
\alias{TS}
\title{Two stage Joint Modeling}
\usage{
TS(
  formFixed,
  formRandom,
  formGroup,
  formSurv,
  nmark,
  K1 = K1,
  K2 = K2,
  model = model,
  n.chains1 = n.chains1,
  n.iter1 = n.iter1,
  n.burnin1 = floor(n.iter1/2),
  n.thin1 = max(1, floor((n.iter1 - n.burnin1)/1000)),
  n.chains2 = n.chains2,
  n.iter2 = n.iter2,
  n.burnin2 = floor(n.iter2/2),
  n.thin2 = max(1, floor((n.iter2 - n.burnin2)/1000)),
  Obstime = "obstime",
  ncl = ncl,
  DIC = TRUE,
  quiet = FALSE,
  dataLong,
  dataSurv
)
}
\arguments{
\item{formFixed}{a list of formulas for fixed part of longitudinal model}

\item{formRandom}{a list of formulas for random part of longitudinal model}

\item{formGroup}{a list of formulas specifying the cluster variable for Y (e.g. = list (~ subject, ~ subject,...))}

\item{formSurv}{formula for survival model}

\item{nmark}{the number of longitudinal markers}

\item{K1}{Number of nodes and weights for calculating Gaussian quadrature in the first stage.}

\item{K2}{Number of nodes and weights for calculating Gaussian quadrature in the second stage.}

\item{model}{a list of the models for the longitudinal part which includes "linear" or "quadratic".}

\item{n.chains1}{the number of parallel chains for the model in the first stage; default is 1.}

\item{n.iter1}{integer specifying the total number of iterations in the first stage; default is 1000.}

\item{n.burnin1}{integer specifying how many of n.iter to discard as burn-in in the first stage; default is 5000.}

\item{n.thin1}{integer specifying the thinning of the chains in the first stage; default is 1.}

\item{n.chains2}{the number of parallel chains for the model in the second stage; default is 1.}

\item{n.iter2}{integer specifying the total number of iterations in the second stage; default is 1000.}

\item{n.burnin2}{integer specifying how many of n.iter to discard as burn-in in the second stage; default is 5000.}

\item{n.thin2}{integer specifying the thinning of the chains in the second stage; default is 1.}

\item{Obstime}{the observed time in longitudinal data}

\item{ncl}{the number of nodes to be forked for parallel computing}

\item{DIC}{Logical; if TRUE (default), compute deviance, pD, and DIC. The rule pD=var(deviance) / 2 is used.}

\item{quiet}{Logical, whether to suppress stdout in jags.model().}

\item{dataLong}{data set of observed longitudinal variables.}

\item{dataSurv}{data set of observed survival variables.}
}
\value{
\itemize{
\item MCMC chains for the unknown parameters
\item mu.vect list of posterior mean for each parameter
\item sd.vect list of standard error for each parameter
\item 2.5\% list of posterior mode for each parameter
\item 97.5\% list of posterior median for each parameter
\item Rhat Gelman and Rubin diagnostic for all parameter
}
}
\description{
Employ a two-stage approach to efficiently select variables for joint modeling of multiple longitudinal markers and time-to-event outcomes within a Bayesian framework.
}
\details{
A two-stage approach within a Bayesian framework is designed to handle multiple longitudinal measurements and survival outcomes. In the first stage, we address the estimation of a one-marker joint model for the event along with each longitudinal marker. Leveraging these estimates, we derive predictions for the expected values or slopes of individual marker trajectories. In the second stage, we utilize a proportional hazard model that incorporates the expected current values and/or slopes of all markers as time-dependent covariates.
}
\examples{
\dontrun{
rm(list = ls())
data(dataLong)
data(dataSurv)
set.seed(2)
INDTRAIN <- sample(dataSurv$id, 0.8 * (dim(dataSurv)[1]))
INDVALID <- dataSurv$id[-INDTRAIN]
dataLong_t <- subset(
  dataLong,
  dataLong$id \%in\% INDTRAIN
)
dataSurv_t <- subset(
  dataSurv,
  dataSurv$id \%in\% INDTRAIN
)

dataLong_v <- subset(
  dataLong,
  dataLong$id \%in\% INDVALID
)
dataSurv_v <- subset(
  dataSurv,
  dataSurv$id \%in\% INDVALID
)



formFixed <- list(Y1 ~ obstime, Y2 ~ obstime, Y3 ~ obstime)
formRandom <- list(~obstime, ~obstime, ~obstime)
formGroup <- list(~id, ~id, ~id)
formSurv <- survival::Surv(survtime, death) ~ x1 + x2
model <- list("intercept", "linear", "quadratic")




TS0 <- TS(formFixed, formRandom, formGroup, formSurv,
  nmark = 3, K1 = 15, K2 = 15,
  model = model, n.chains1 = 1, n.iter1 = 2000, n.burnin1 = 1000,
  n.thin1 = 1, n.chains2 = 1, n.iter2 = 3000, n.burnin2 = 1000,
  n.thin2 = 1, Obstime = "obstime", ncl = 2,
  DIC = TRUE, quiet = FALSE, dataLong_t, dataSurv_t
)



formFixed <- list(Y1 ~ obstime, Y2 ~ obstime, Y3 ~ obstime, Y4 ~ obstime)
formRandom <- list(~obstime, ~obstime, ~obstime, ~obstime)
formGroup <- list(~id, ~id, ~id, ~id)
formSurv <- survival::Surv(survtime, death) ~ x1 + x2
model <- list("linear", "linear", "linear", "linear")

TS1 <- TS(formFixed, formRandom, formGroup, formSurv,
  nmark = 4, K1 = 15, K2 = 15,
  model = model, n.chains1 = 1, n.iter1 = 2000, n.burnin1 = 1000,
  n.thin1 = 1, n.chains2 = 1, n.iter2 = 3000, n.burnin2 = 1000,
  n.thin2 = 1, Obstime = "obstime", ncl = 2,
  DIC = TRUE, quiet = FALSE, dataLong_t, dataSurv_t
)



DP <- DP(TS1,
  s = 0.5, t = 0.5, n.chains = 1, n.iter = 2000, n.burnin = 1000,
  n.thin = 1,
  DIC = TRUE, quiet = FALSE, dataLong = dataLong_v, dataSurv = dataSurv_v
)




DP <- DP_CI(TS1,
  s = 0.1, t = 0.5, n.chains = 1, n.iter = 2000, n.burnin = 1000,
  n.thin = 1, mi = 20,
  DIC = TRUE, quiet = FALSE, dataLong = dataLong_v, dataSurv = dataSurv_v
)

}




}
\author{
Taban Baghfalaki \email{t.baghfalaki@gmail.com}
}
